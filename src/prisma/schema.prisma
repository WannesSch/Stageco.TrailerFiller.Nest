// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User{
  id        Int     @id @default(autoincrement())
  name      String  @unique
  password  String  
  email     String
  role      String
}

model Project{
  id        String     @id()
  title     String
  description String?
  venueAddress String?
  crewChief String?
  createdAt String?
  updatedAt String?
  subprojects Subproject[] @relation("ProjectToSubproject")
}

model Asset{
  id              Int   @id @default(autoincrement())
  unit            String
  name            String
  category        Int?   
  height          Float
  width           Float
  depth           Float
  weight          Float
  modelPath       String?
  content         Content[] @relation("content")
  subprojectId    Int?
  subproject      Subproject?   @relation("SubprojectToAsset", fields: [subprojectId], references: [id])
  trailerId       Int?
  trailer         Trailer?   @relation("TrailerWithAsset", fields: [trailerId], references: [id])
  position        Position?   @relation("AssetPosition")
  rotation        Rotation?   @relation("AssetRotation")
  isLocked        Boolean @default(false)
}
model Subproject {
  id     Int   @id @default(autoincrement())
  title         String  
  description   String?
  crewChief     String?
  departureDate String?
  createdAt     String?
  updatedAt     String?
  projectId     String?
  project       Project?   @relation("ProjectToSubproject", fields: [projectId], references: [id])
  trailers      Trailer[]  @relation("SubprojectToTrailer")
  assets        Asset[]    @relation("SubprojectToAsset")
}
model Trailer {
  id            Int   @id @default(autoincrement())
  width         Float 
  depth         Float
  height        Float
  weight        Float?
  maxWeight     Float
  subprojectId  Int?
  type          String?
  licensePlate  String?
  description   String?
  assets        Asset[]   @relation("TrailerWithAsset")
  subproject    Subproject?   @relation("SubprojectToTrailer", fields: [subprojectId], references: [id])   
}

model Content {
  id        Int   @id @default(autoincrement())
  name      String
  unit      String?
  boxId     Int?
  weight    Float?
  amount    Int
  asset     Asset?   @relation("content", fields: [boxId], references: [id])

}

model Position{
  id    Int  @id @default(autoincrement()) @unique
  x     Float?
  y     Float?
  z     Float?
  asset Asset   @relation("AssetPosition", fields: [id], references: [id])
}

model Rotation{
  id    Int  @id @default(autoincrement())@unique
  x     Float?
  y     Float?
  z     Float?
  asset Asset   @relation("AssetRotation", fields: [id], references: [id])
}
